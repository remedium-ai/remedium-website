---
import { getLocaleUrlCTM } from "@/lib/utils/languageParser.ts";
import { humanize } from "@/lib/utils/textConverter";

// Props
interface Props {
  class?: string;
  hidden_paths?: string[];
}

const { hidden_paths, class: className, ...rest } = Astro.props;

// Helper function to create breadcrumb parts
const createBreadcrumbParts = (pathname: string) => {
  let segments = pathname.split("/").filter((segment) => segment);

  // Remove locale from segments
  if (segments[0] === Astro.currentLocale) {
    segments = segments.slice(1);
  }

  const breadcrumbParts = [
    {
      label: "Home",
      href: getLocaleUrlCTM("/", Astro.currentLocale),
      "aria-label": pathname === "/" ? "page" : undefined,
    },
  ];

  segments.forEach((segment, index) => {
    const href = getLocaleUrlCTM(
      `/${segments.slice(0, index + 1).join("/")}`,
      Astro.currentLocale,
    );
    if (segment !== "page") {
      breadcrumbParts.push({
        label:
          humanize(segment.replace(".html", "").replace(/[-_]/g, " ")) || "",
        href,
        "aria-label": pathname === href ? "page" : undefined,
      });
    }
  });

  return breadcrumbParts;
};

// Generate breadcrumb parts
let breadcrumbParts = createBreadcrumbParts(Astro.url.pathname);

// Removed hidden paths
if (hidden_paths && hidden_paths.length > 0) {
  breadcrumbParts = breadcrumbParts.map((part) => {
    return {
      ...part,
      href: !hidden_paths?.includes(part.label) ? part.href : "",
    };
  });
}
---

<nav aria-label="Breadcrumb" class:list={[className]} {...rest}>
  <ol
    class="has-list has-list-slash slash-dark inline-flex flex-wrap gap-y-3"
    role="list">
    {
      breadcrumbParts.map(({ label, ...attrs }, index) => (
        <li class="mx-1 capitalize" role="listitem">
          {index !== breadcrumbParts.length - 1 && attrs.href !== "" ? (
            <a class="text-primary" {...attrs}>
              {label}
            </a>
          ) : (
            <span class="text-text-default/70" set:html={label} />
          )}
        </li>
      ))
    }
  </ol>
</nav>
