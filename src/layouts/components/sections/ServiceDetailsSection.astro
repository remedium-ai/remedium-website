---
import type { Section } from "@/types";
import Marquee from "@/components/widgets/Marquee.astro";
import { getEntryCTM } from "@/lib/contentParser.astro";
import overrideObjects from "@/lib/utils/overrideObjects.ts";
import OptimizedImage from "@/components/utilities/OptimizedImage.astro";
import type { InferEntrySchema } from "astro:content";
import { markdownify, toSentenceCase } from "@/lib/utils/textConverter";
import parseTomlToJson from "@/lib/utils/parseTomlToJson";
import {
  getLocaleUrlCTM,
  useTranslations,
} from "@/lib/utils/languageParser.ts";

const t = await useTranslations(Astro.currentLocale as string);
const config = parseTomlToJson("./src/config/config.toml");
const { services_folder }: { services_folder: "services" } = config.settings;

// Type for this section data
type service_details_section_type = Section &
  InferEntrySchema<"services">["details"];

type Props = {
  content?: service_details_section_type;
};

// Fetching the default content using getEntry for the this section (If applicable)
let default_content = {} as service_details_section_type;

// Enables content customization (e.g., title, description) with a fallback to 'default_content' if not provided.
// The 'content' prop should match the structure of 'default_content'.
// Allows using this section with different content across multiple pages.
// If 'content' is missing, 'default_content' will be used.
let actual_content = overrideObjects(
  { ...default_content },
  Astro.props.content,
) as service_details_section_type;

// Extracting required values from 'content' object
let {
  enable = true,
  title,
  description,
  list,
} = actual_content as service_details_section_type;

const { service_details_marquee: marquee } = (
  await getEntryCTM(services_folder, "-index", Astro.currentLocale)
)?.data;
---

{
  enable && (
    <section class="overflow-hidden">
      <div class="container">
        <div class="flex flex-wrap items-center justify-between gap-6 overflow-x-hidden lg:flex-nowrap">
          <div class="lg:max-w-lg" data-aos="fade-right-sm">
            {title && (
              <h2
                class="text-h3 has-text-highlight text-inherit"
                set:html={markdownify(title)}
              />
            )}
          </div>
          {description && (
            <p
              data-aos="fade-right-sm"
              data-aos-delay="200"
              class="opacity-80 lg:max-w-md xl:max-w-3xl"
              set:html={markdownify(description)}
            />
          )}
        </div>
      </div>
      {marquee && (
        <div
          data-aos-delay="300"
          data-aos="fade-up-sm"
          class="relative mt-12 flex justify-center overflow-x-hidden md:mt-16">
          <Marquee
            class="items-stretch"
            marqueeElements={list?.length || 0}
            marqueePauseOnHover={marquee.pause_on_hover}
            marqueeReverse={marquee.reverse}
            marqueeDuration={marquee.duration}
            marqueeElementWidth={marquee.element_width}
            marqueeElementWidthResponsive={
              marquee.element_width_in_small_devices
            }>
            {list?.map((item) => (
              <div class="min-w-[var(--marquee-element-width-responsive)] px-3 md:min-w-[var(--marquee-element-width)]">
                <article class="bg-theme-light group hover:bg-primary min-h-full px-5 py-5 transition duration-300">
                  <div class="after:from-primary after:via-primary/40 relative flex items-center justify-center overflow-hidden via-20% to-transparent after:pointer-events-none after:absolute after:inset-0 after:z-10 after:bg-gradient-to-t after:transition-opacity after:duration-300 after:md:opacity-0 group-hover:md:after:opacity-100">
                    {item.cta_btn.enable && (
                      <span class="font-secondary bg-primary pointer-events-none absolute z-20 flex size-20 flex-col items-center justify-center rounded-full text-lg whitespace-nowrap text-white transition duration-500 md:size-24 md:gap-2 md:text-2xl/none md:opacity-0 group-hover:md:opacity-100">
                        <span class="text-sm md:text-2xl">
                          <OptimizedImage
                            alt="icon"
                            inlineSvg={true}
                            class="h-6 w-6 text-white"
                            src="/images/icons/svg/arrow-top-right.svg"
                          />
                        </span>
                        {item.cta_btn.label}
                      </span>
                    )}
                    <OptimizedImage
                      src={item.image}
                      alt={toSentenceCase("Image about " + item.title)}
                      class="h-72 w-full object-cover transition duration-500 md:h-80"
                    />
                    {item.cta_btn.enable && (
                      <a
                        class="absolute inset-0 z-30"
                        href={getLocaleUrlCTM(
                          item.cta_btn.url,
                          Astro.currentLocale,
                        )}
                        title={toSentenceCase(
                          t("common.learn_more_about") + " " + item.title,
                        )}
                      />
                    )}
                  </div>
                  <div class="space-y-2.5 pt-6">
                    {item.title && (
                      <h2
                        class="text-h5 mt-2 mb-4 group-hover:text-white"
                        set:html={markdownify(item.title)}
                      />
                    )}
                    {item.description && (
                      <p
                        class="opacity-70 group-hover:text-white group-hover:opacity-100"
                        set:html={markdownify(item.description)}
                      />
                    )}
                  </div>
                </article>
              </div>
            ))}
            {list?.map((item) => (
              <div
                class="min-w-[var(--marquee-element-width-responsive)] px-3 md:min-w-[var(--marquee-element-width)]"
                aria-hidden="true">
                <article class="bg-theme-light group hover:bg-primary min-h-full px-5 py-5 transition duration-300">
                  <div class="after:from-primary after:via-primary/40 relative flex items-center justify-center overflow-hidden via-20% to-transparent after:pointer-events-none after:absolute after:inset-0 after:z-10 after:bg-gradient-to-t after:transition-opacity after:duration-300 after:md:opacity-0 group-hover:md:after:opacity-100">
                    {item.cta_btn.enable && (
                      <span class="font-secondary bg-primary pointer-events-none absolute z-20 flex size-20 flex-col items-center justify-center rounded-full text-lg whitespace-nowrap text-white transition duration-500 md:size-24 md:gap-2 md:text-2xl/none md:opacity-0 group-hover:md:opacity-100">
                        <span class="text-sm md:text-2xl">
                          <OptimizedImage
                            alt="icon"
                            inlineSvg={true}
                            class="h-6 w-6 text-white"
                            src="/images/icons/svg/arrow-top-right.svg"
                          />
                        </span>
                        {item.cta_btn.label}
                      </span>
                    )}
                    <OptimizedImage
                      src={item.image}
                      alt={toSentenceCase("Image related to " + item.title)}
                      class="h-72 w-full object-cover transition duration-500 md:h-80"
                    />
                    {item.cta_btn.enable && (
                      <a
                        tabindex="-1"
                        class="absolute inset-0 z-30"
                        href={getLocaleUrlCTM(
                          item.cta_btn.url,
                          Astro.currentLocale,
                        )}
                        title={toSentenceCase(
                          t("common.learn_more_about") + " " + item.title,
                        )}
                      />
                    )}
                  </div>
                  <div class="space-y-2.5 pt-6">
                    {item.title && (
                      <h2
                        class="text-h5 mt-2 mb-4 group-hover:text-white"
                        set:html={markdownify(item.title)}
                      />
                    )}
                    {item.description && (
                      <p
                        class="opacity-70 group-hover:text-white group-hover:opacity-100"
                        set:html={markdownify(item.description)}
                      />
                    )}
                  </div>
                </article>
              </div>
            ))}
          </Marquee>
        </div>
      )}
    </section>
  )
}
